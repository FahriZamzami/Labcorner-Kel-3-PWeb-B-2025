<!DOCTYPE html>
<html lang="id">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title><%= title || 'Dashboard LabCorner' %></title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          fontFamily: { sans: ['Inter', 'sans-serif'] },
          colors: {
            primary: '#6366f1', // Indigo-500
            secondary: '#a855f7', // Purple-500
            accent: '#ec4899' // Pink-500
          },
          animation: {
            aurora: 'aurora 60s linear infinite',
            'input-enter': 'input-enter 0.5s ease-out forwards',
            'input-leave': 'input-leave 0.3s ease-in forwards',
            'tag-in': 'tag-in 0.5s ease-out forwards'
          },
          keyframes: {
            aurora: {
              '0%': { transform: 'translate(0%, 0%) rotate(0deg)' },
              '25%': { transform: 'translate(10%, -20%) rotate(20deg)' },
              '50%': { transform: 'translate(-10%, 20%) rotate(-20deg)' },
              '75%': { transform: 'translate(-5%, -10%) rotate(10deg)' },
              '100%': { transform: 'translate(0%, 0%) rotate(0deg)' },
            },
            'input-enter': {
              '0%': { opacity: '0', transform: 'translateY(20px)' },
              '100%': { opacity: '1', transform: 'translateY(0px)' },
            },
            'input-leave': {
              '0%': { opacity: '1', transform: 'translateY(0px)' },
              '100%': { opacity: '0', transform: 'translateY(-20px)' },
            },
            'tag-in': {
               '0%': { opacity: '0', transform: 'scale(0.8) translateY(20px)' },
               '100%': { opacity: '1', transform: 'scale(1) translateY(0)' },
            }
          }
        }
      }
    }
  </script>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;800&display=swap" rel="stylesheet">
</head>

<body class="bg-slate-50 min-h-screen text-slate-800 font-[Inter] overflow-hidden flex items-center justify-center">
  
  <div class="absolute inset-0 z-0 pointer-events-none opacity-40 overflow-hidden">
      <div class="absolute top-[-10%] left-[-10%] w-96 h-96 bg-purple-200 rounded-full filter blur-3xl animate-aurora"></div>
      <div class="absolute top-1/2 right-0 w-96 h-96 bg-indigo-200 rounded-full filter blur-3xl animate-aurora" style="animation-delay: -10s;"></div>
      <div class="absolute bottom-[-20%] left-[15%] w-96 h-96 bg-pink-200 rounded-full filter blur-3xl animate-aurora" style="animation-delay: -20s;"></div>
  </div>

  <div class="relative w-full max-w-2xl mx-auto px-6 py-12 z-10">
    <h2 class="text-5xl font-extrabold text-slate-900 drop-shadow-sm text-center mb-12">ðŸ‘¤ Tambah User Baru</h2>

    <div class="bg-white/60 backdrop-blur-xl rounded-3xl shadow-2xl p-8 sm:p-10 border border-white/30">
        <div id="formContainer" class="overflow-hidden min-h-[70px]">
            <div class="form-step" data-step="0">
                <div class="input-group">
                    <input type="text" id="nama" name="nama" class="form-input" placeholder=" " required />
                    <label for="nama" class="floating-label">ðŸ§‘ Siapa nama lengkap user?</label>
                </div>
            </div>
            <div class="form-step hidden" data-step="1">
                <div class="input-group">
                    <input type="text" id="username" name="username" class="form-input" placeholder=" " required />
                    <label for="username" class="floating-label">ðŸ†” Buat username yang unik</label>
                </div>
            </div>
             <div class="form-step hidden" data-step="2">
                <div class="input-group">
                    <input type="password" id="password" name="password" class="form-input" placeholder=" " required />
                    <label for="password" class="floating-label">ðŸ”’ Masukkan password</label>
                </div>
            </div>
             <div class="form-step hidden" data-step="3">
                <div class="input-group">
                     <select name="peran" id="peran" class="form-input text-lg" required>
                      <option value="" disabled selected>-- Pilih Peran --</option>
                      <option value="mahasiswa">Mahasiswa</option>
                      <option value="asisten">Asisten</option>
                    </select>
                    <label for="peran" class="floating-label active">ðŸ‘¥ Apa perannya?</label>
                </div>
            </div>
        </div>

        <div class="mt-8">
            <h3 class="text-lg font-semibold text-slate-700 mb-4">Preview Data:</h3>
            <div id="collectedData" class="flex flex-wrap gap-3 min-h-[50px] p-4 bg-slate-100/80 rounded-xl border border-slate-200">
                </div>
        </div>

        <div class="mt-8 pt-6 border-t border-slate-200">
            <button type="button" id="submitBtn" class="w-full bg-gradient-to-r from-primary to-secondary text-white text-lg font-semibold px-6 py-4 rounded-full shadow-lg transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed hover:shadow-primary/40 hover:scale-105 active:scale-100">
              <span class="btn-text">Lengkapi semua data</span>
            </button>
        </div>
    </div>
  </div>

  <div id="toast" class="fixed top-6 right-6 bg-green-600 text-white px-6 py-3 rounded-xl shadow-lg transform translate-x-[120%] transition-transform duration-500 z-50 text-lg"></div>

  <style>
    .input-group { @apply relative; }
    .form-input {
      @apply w-full px-5 pt-6 pb-2 text-slate-800 text-lg bg-transparent border-b-2 border-slate-300 transition-all duration-300 focus:outline-none focus:border-primary;
    }
    .form-input:focus + .floating-label,
    .form-input:not(:placeholder-shown) + .floating-label,
    .floating-label.active {
      @apply transform -translate-y-4 text-sm text-primary font-semibold;
    }
    .floating-label {
      @apply absolute top-4 left-5 text-slate-500 text-lg transition-all duration-300 pointer-events-none;
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
        const steps = Array.from(document.querySelectorAll('.form-step'));
        const inputs = {
            nama: document.getElementById('nama'),
            username: document.getElementById('username'),
            password: document.getElementById('password'),
            peran: document.getElementById('peran')
        };
        const collectedDataContainer = document.getElementById('collectedData');
        const submitBtn = document.getElementById('submitBtn');
        const btnText = submitBtn.querySelector('.btn-text');
        let currentStep = 0;
        const formData = {};

        const goToStep = (stepIndex) => {
            if (stepIndex >= steps.length) {
                btnText.textContent = 'âž• Tambah User';
                submitBtn.disabled = false;
                return;
            }
            steps.forEach((step, index) => {
                if (index === stepIndex) {
                    step.classList.remove('hidden', 'animate-input-leave');
                    step.classList.add('animate-input-enter');
                    step.querySelector('input, select').focus();
                } else {
                    step.classList.add('hidden');
                }
            });
            currentStep = stepIndex;
        };

        const addDataTag = (key, value, icon) => {
            const existingTag = document.querySelector(`[data-key="${key}"]`);
            if(existingTag) existingTag.remove();

            const tag = document.createElement('div');
            tag.className = 'flex items-center gap-2 bg-indigo-100 text-indigo-800 px-3 py-1.5 rounded-full animate-tag-in text-sm font-semibold';
            tag.dataset.key = key;
            tag.innerHTML = `<span>${icon}</span><span class="font-medium">${value}</span>`;
            collectedDataContainer.appendChild(tag);
            formData[key] = value;
        };
        
        const handleStepCompletion = (inputElement) => {
             const key = inputElement.name;
             let value = inputElement.value;
             let icon = '';

             switch(key) {
                case 'nama': icon = 'ðŸ§‘'; break;
                case 'username': icon = 'ðŸ†”'; break;
                case 'password': value = 'â€¢â€¢â€¢â€¢â€¢â€¢â€¢â€¢'; icon = 'ðŸ”’'; break;
                case 'peran': value = inputElement.options[inputElement.selectedIndex].text; icon = 'ðŸ‘¥'; break;
             }
             
             if (inputElement.value.trim() === '') return;
             addDataTag(key, value, icon);
             goToStep(currentStep + 1);
        };
        
        Object.values(inputs).forEach(input => {
            input.addEventListener('keydown', (e) => {
                if (e.key === 'Enter' && input.type !== 'select-one') {
                    e.preventDefault();
                    handleStepCompletion(e.target);
                }
            });
            if (input.type === 'select-one') {
                input.addEventListener('change', (e) => handleStepCompletion(e.target));
            }
        });

        submitBtn.addEventListener('click', (e) => {
            e.preventDefault();
            if (submitBtn.disabled) return;
            
            btnText.textContent = 'Menyimpan...';
            submitBtn.disabled = true;

            setTimeout(() => {
                btnText.innerHTML = `âœ“ Berhasil!`;
                submitBtn.style.background = '#22c55e'; // Green-500
                showToast("âœ… User berhasil ditambahkan!");
                
                setTimeout(() => {
                    collectedDataContainer.innerHTML = '';
                    goToStep(0);
                    // Reset form fields
                    Object.values(inputs).forEach(input => { input.value = ''; });
                    inputs.peran.selectedIndex = 0;
                    
                    document.querySelectorAll('.floating-label').forEach(label => {
                        label.classList.remove('-translate-y-4', 'text-sm', 'text-primary', 'font-semibold');
                    });
                    
                    submitBtn.disabled = true;
                    btnText.textContent = 'Lengkapi semua data';
                    submitBtn.style.background = '';
                }, 2000);
            }, 1200);
        });

        function showToast(msg) {
          const toast = document.getElementById("toast");
          toast.textContent = msg;
          toast.classList.remove("translate-x-[120%]");
          setTimeout(() => {
            toast.classList.add("translate-x-[120%]");
          }, 2500);
        }

        goToStep(0);
    });
  </script>
</body>
</html>