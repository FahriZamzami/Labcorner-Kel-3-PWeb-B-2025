<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Statistics - LabCorner</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gradient-to-br from-purple-50 to-indigo-50 min-h-screen">

<!-- Header -->
<header class="bg-white/95 backdrop-blur-lg shadow-lg border-b border-purple-200 sticky top-0 z-40">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center py-4">
      <div class="flex items-center space-x-4">
        <a href="/" class="bg-gradient-to-r from-purple-600 to-indigo-600 hover:from-purple-700 hover:to-indigo-700 text-white font-bold px-4 py-2 rounded-lg shadow-lg transition-all transform hover:scale-105 active:scale-95 flex items-center space-x-2">
          <i class="fas fa-arrow-left"></i>
          <span>Back to Dashboard</span>
        </a>
        <div>
          <h1 class="text-xl font-bold bg-gradient-to-r from-purple-600 to-indigo-600 bg-clip-text text-transparent">
            Submission Statistics
          </h1>
          <p class="text-xs text-gray-600">Generate and view lab submission reports</p>
        </div>
      </div>
    </div>
  </div>
</header>

<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-6">
  <!-- Lab Selection -->
  <div class="bg-white rounded-xl shadow-md border border-gray-100 p-6 mb-6">
    <div class="flex items-center justify-between mb-4">
      <h3 class="text-lg font-bold text-gray-800">Select Laboratory</h3>
      <div class="w-6 h-6 bg-purple-100 rounded-lg flex items-center justify-center">
        <i class="fas fa-microscope text-purple-600 text-xs"></i>
      </div>
    </div>
    
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4" id="labSelection">
      <!-- Lab cards will be populated here -->
    </div>
  </div>

  <!-- Statistics Overview -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-6" id="statsOverview" style="display: none;">
    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-4">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs font-medium text-gray-600">Total Submissions</p>
          <p class="text-2xl font-bold text-gray-800" id="totalSubmissions">0</p>
          <p class="text-xs text-blue-600 mt-1">All time</p>
        </div>
        <div class="w-8 h-8 bg-blue-100 rounded-lg flex items-center justify-center">
          <i class="fas fa-file-alt text-blue-600 text-sm"></i>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-4">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs font-medium text-gray-600">Completed</p>
          <p class="text-2xl font-bold text-gray-800" id="completedSubmissions">0</p>
          <p class="text-xs text-green-600 mt-1" id="completionRate">0%</p>
        </div>
        <div class="w-8 h-8 bg-green-100 rounded-lg flex items-center justify-center">
          <i class="fas fa-check-circle text-green-600 text-sm"></i>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-4">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs font-medium text-gray-600">Pending</p>
          <p class="text-2xl font-bold text-gray-800" id="pendingSubmissions">0</p>
          <p class="text-xs text-yellow-600 mt-1">Awaiting review</p>
        </div>
        <div class="w-8 h-8 bg-yellow-100 rounded-lg flex items-center justify-center">
          <i class="fas fa-clock text-yellow-600 text-sm"></i>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-xl shadow-md border border-gray-100 p-4">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs font-medium text-gray-600">Average Score</p>
          <p class="text-2xl font-bold text-gray-800" id="averageScore">0</p>
          <p class="text-xs text-purple-600 mt-1">Out of 100</p>
        </div>
        <div class="w-8 h-8 bg-purple-100 rounded-lg flex items-center justify-center">
          <i class="fas fa-chart-line text-purple-600 text-sm"></i>
        </div>
      </div>
    </div>
  </div>

  <!-- Recent Submissions -->
  <div class="bg-white rounded-xl shadow-md border border-gray-100 p-6" id="recentSubmissions" style="display: none;">
    <div class="flex items-center justify-between mb-4">
      <h3 class="text-lg font-bold text-gray-800">Recent Submissions</h3>
      <div class="w-6 h-6 bg-indigo-100 rounded-lg flex items-center justify-center">
        <i class="fas fa-list text-indigo-600 text-xs"></i>
      </div>
    </div>
    
    <div class="overflow-x-auto">
      <table class="w-full text-sm">
        <thead>
          <tr class="border-b border-gray-200">
            <th class="text-left py-3 px-4 font-semibold text-gray-700">Student</th>
            <th class="text-left py-3 px-4 font-semibold text-gray-700">Task</th>
            <th class="text-left py-3 px-4 font-semibold text-gray-700">Submitted</th>
            <th class="text-left py-3 px-4 font-semibold text-gray-700">Score</th>
            <th class="text-left py-3 px-4 font-semibold text-gray-700">Status</th>
          </tr>
        </thead>
        <tbody id="submissionsTable">
          <!-- Submissions will be populated here -->
        </tbody>
      </table>
    </div>
  </div>

  <!-- Loading State -->
  <div id="loadingState" class="text-center py-12" style="display: none;">
    <div class="w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4">
      <i class="fas fa-spinner fa-spin text-purple-600 text-2xl"></i>
    </div>
    <h3 class="text-lg font-semibold text-gray-600 mb-2">Loading Statistics...</h3>
    <p class="text-gray-500">Please wait while we generate the report</p>
  </div>

  <!-- Empty State -->
  <div id="emptyState" class="text-center py-12" style="display: none;">
    <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
      <i class="fas fa-chart-bar text-gray-400 text-2xl"></i>
    </div>
    <h3 class="text-lg font-semibold text-gray-600 mb-2">No Data Available</h3>
    <p class="text-gray-500">Select a laboratory to view submission statistics</p>
  </div>
</main>

<script>
let currentLabId = null;

document.addEventListener('DOMContentLoaded', function() {
  loadLabs();
});

async function loadLabs() {
  try {
    const response = await fetch('/api/lab');
    const result = await response.json();
    
    if (result.success) {
      const labSelection = document.getElementById('labSelection');
      labSelection.innerHTML = '';
      
      result.labs.forEach(lab => {
        const labCard = document.createElement('div');
        labCard.className = 'group block p-4 bg-gradient-to-br from-gray-50 to-gray-100 rounded-lg border border-gray-200 hover:from-gray-100 hover:to-gray-200 transition-all duration-300 transform hover:scale-105 cursor-pointer';
        labCard.onclick = () => selectLab(lab.id);
        
        labCard.innerHTML = `
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 bg-gradient-to-br from-blue-400 to-indigo-500 text-white rounded-lg flex items-center justify-center text-lg font-bold shadow-lg">
              ${lab.nama.charAt(0)}
            </div>
            <div>
              <h4 class="font-bold text-gray-900 group-hover:text-gray-800 text-sm">${lab.nama}</h4>
              <p class="text-xs text-gray-600">${lab.dosen}</p>
              <p class="text-xs text-gray-500 mt-1">Click to view statistics</p>
            </div>
          </div>
        `;
        
        labSelection.appendChild(labCard);
      });
    }
  } catch (error) {
    console.error('Error loading labs:', error);
    showToast('Error loading laboratories', 'error');
  }
}

async function selectLab(labId) {
  currentLabId = labId;
  
  // Show loading state
  document.getElementById('loadingState').style.display = 'block';
  document.getElementById('statsOverview').style.display = 'none';
  document.getElementById('recentSubmissions').style.display = 'none';
  document.getElementById('emptyState').style.display = 'none';
  
  try {
    const response = await fetch(`/api/statistics/${labId}`);
    const result = await response.json();
    
    if (result.success) {
      displayStatistics(result.statistics, result.lab);
    } else {
      showToast(result.message || 'Error loading statistics', 'error');
      document.getElementById('emptyState').style.display = 'block';
    }
  } catch (error) {
    console.error('Error loading statistics:', error);
    showToast('Error loading statistics', 'error');
    document.getElementById('emptyState').style.display = 'block';
  } finally {
    document.getElementById('loadingState').style.display = 'none';
  }
}

function displayStatistics(stats, lab) {
  // Update overview stats
  document.getElementById('totalSubmissions').textContent = stats.totalSubmissions;
  document.getElementById('completedSubmissions').textContent = stats.completedSubmissions;
  document.getElementById('pendingSubmissions').textContent = stats.pendingSubmissions;
  document.getElementById('averageScore').textContent = stats.averageScore;
  
  const completionRate = stats.totalSubmissions > 0 ? Math.round((stats.completedSubmissions / stats.totalSubmissions) * 100) : 0;
  document.getElementById('completionRate').textContent = `${completionRate}%`;
  
  // Show sections
  document.getElementById('statsOverview').style.display = 'grid';
  document.getElementById('recentSubmissions').style.display = 'block';
  
  // Populate recent submissions
  populateRecentSubmissions(stats.recentSubmissions);
}

function populateRecentSubmissions(submissions) {
  const tableBody = document.getElementById('submissionsTable');
  tableBody.innerHTML = '';
  
  if (submissions.length === 0) {
    tableBody.innerHTML = `
      <tr>
        <td colspan="5" class="text-center py-8 text-gray-500">
          No recent submissions found
        </td>
      </tr>
    `;
    return;
  }
  
  submissions.forEach(submission => {
    const row = document.createElement('tr');
    row.className = 'border-b border-gray-100 hover:bg-gray-50';
    
    const submittedDate = new Date(submission.submittedAt).toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
    
    const statusClass = submission.status === 'Completed' 
      ? 'bg-green-100 text-green-800' 
      : 'bg-yellow-100 text-yellow-800';
    
    row.innerHTML = `
      <td class="py-3 px-4">${submission.studentName}</td>
      <td class="py-3 px-4">${submission.taskTitle}</td>
      <td class="py-3 px-4">${submittedDate}</td>
      <td class="py-3 px-4">${submission.score || '-'}</td>
      <td class="py-3 px-4">
        <span class="px-2 py-1 text-xs font-semibold rounded-full ${statusClass}">
          ${submission.status}
        </span>
      </td>
    `;
    
    tableBody.appendChild(row);
  });
}

function showToast(message, type = 'info') {
  const toast = document.createElement('div');
  toast.className = `fixed top-4 right-4 z-50 px-6 py-4 rounded-lg shadow-lg text-white font-semibold transform translate-x-full transition-transform duration-300 ${
    type === 'success' ? 'bg-green-500' : 
    type === 'error' ? 'bg-red-500' : 
    type === 'info' ? 'bg-blue-500' :
    'bg-gray-500'
  }`;
  toast.textContent = message;
  
  document.body.appendChild(toast);
  
  setTimeout(() => {
    toast.classList.remove('translate-x-full');
  }, 100);
  
  setTimeout(() => {
    toast.classList.add('translate-x-full');
    setTimeout(() => {
      document.body.removeChild(toast);
    }, 300);
  }, 3000);
}
</script>
</body>
</html> 