<div class="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-indigo-100 py-8">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-4xl font-bold bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent mb-2">📢 Daftar Pengumuman</h1>
          <p class="text-lg text-gray-600">Kelola dan lihat semua pengumuman yang telah dipublikasikan</p>
        </div>
        <a href="/pengumuman" class="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-semibold px-6 py-3 rounded-xl shadow-lg transition-all transform hover:scale-105 flex items-center gap-2">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
          </svg>
          Buat Pengumuman Baru
        </a>
      </div>
    </div>

    <!-- Stats Cards -->
    <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
      <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-purple-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-purple-100">
            <svg class="w-6 h-6 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Total Pengumuman</p>
            <p id="totalCount" class="text-2xl font-bold text-gray-900">0</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-blue-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-blue-100">
            <svg class="w-6 h-6 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Hari Ini</p>
            <p id="todayCount" class="text-2xl font-bold text-gray-900">0</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-green-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-green-100">
            <svg class="w-6 h-6 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Admin Aktif</p>
            <p class="text-2xl font-bold text-gray-900">1</p>
          </div>
        </div>
      </div>
      
      <div class="bg-white rounded-xl shadow-lg p-6 border-l-4 border-orange-500">
        <div class="flex items-center">
          <div class="p-3 rounded-full bg-orange-100">
            <svg class="w-6 h-6 text-orange-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
            </svg>
          </div>
          <div class="ml-4">
            <p class="text-sm font-medium text-gray-600">Update Terakhir</p>
            <p id="lastUpdate" class="text-sm font-bold text-gray-900">Baru saja</p>
          </div>
        </div>
      </div>
    </div>

    <!-- Search and Filter -->
    <div class="bg-white rounded-xl shadow-lg p-6 mb-8 border border-gray-100">
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">🔍 Cari Pengumuman</label>
          <input type="text" id="searchInput" placeholder="Cari berdasarkan judul atau isi..." class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all">
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">🏢 Filter Lab</label>
          <select id="labFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all">
            <option value="">Semua Lab</option>
            <!-- Lab options will be populated dynamically -->
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">📊 Urutkan</label>
          <select id="sortFilter" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all">
            <option value="newest">Terbaru</option>
            <option value="oldest">Terlama</option>
          </select>
        </div>
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">⏰ Auto Refresh</label>
          <select id="autoRefresh" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent transition-all">
            <option value="0">Mati</option>
            <option value="30">30 detik</option>
            <option value="60">1 menit</option>
            <option value="300">5 menit</option>
          </select>
        </div>
      </div>
    </div>

    <!-- Loading State -->
    <div id="loadingState" class="text-center py-12">
      <div class="inline-flex items-center px-4 py-2 font-semibold leading-6 text-purple-600 transition ease-in-out duration-150">
        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-purple-600" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Memuat pengumuman...
      </div>
    </div>

    <!-- Empty State -->
    <div id="emptyState" class="hidden text-center py-12">
      <div class="max-w-md mx-auto">
        <div class="bg-white rounded-xl shadow-lg p-8">
          <svg class="mx-auto h-16 w-16 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
          </svg>
          <h3 class="mt-4 text-lg font-medium text-gray-900">Tidak ada pengumuman</h3>
          <p class="mt-2 text-sm text-gray-500">Belum ada pengumuman yang dipublikasikan.</p>
          <div class="mt-6">
            <a href="/pengumuman" class="inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-lg text-white bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700">
              <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
              </svg>
              Buat Pengumuman Pertama
            </a>
          </div>
        </div>
      </div>
    </div>

    <!-- Announcements Grid -->
    <div id="announcementsGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      <!-- Announcements will be loaded here -->
    </div>

    <!-- Back Button -->
    <div class="mt-8 text-center">
      <a href="/" class="inline-flex items-center px-6 py-3 border border-gray-300 shadow-sm text-base font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 transition-all transform hover:scale-105">
        <svg class="-ml-1 mr-2 h-5 w-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Kembali ke Dashboard
      </a>
    </div>
  </div>
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-xl bg-white">
    <div class="mt-3 text-center">
      <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
        <svg class="h-6 w-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
        </svg>
      </div>
      <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4">Konfirmasi Hapus</h3>
      <div class="mt-2 px-7 py-3">
        <p class="text-sm text-gray-500">
          Apakah Anda yakin ingin menghapus pengumuman ini? Tindakan ini tidak dapat dibatalkan.
        </p>
      </div>
      <div class="items-center px-4 py-3">
        <button id="confirmDelete" class="px-4 py-2 bg-red-500 text-white text-base font-medium rounded-lg shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300 mr-2">
          Hapus
        </button>
        <button id="cancelDelete" class="px-4 py-2 bg-gray-500 text-white text-base font-medium rounded-lg shadow-sm hover:bg-gray-600 focus:outline-none focus:ring-2 focus:ring-gray-300">
          Batal
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Toast Notification -->
<div id="toast" class="fixed top-4 right-4 z-50 hidden">
  <div class="bg-white border-l-4 border-green-500 shadow-lg rounded-lg p-4 max-w-sm">
    <div class="flex items-center">
      <div class="flex-shrink-0">
        <svg class="h-5 w-5 text-green-500" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"></path>
        </svg>
      </div>
      <div class="ml-3">
        <p id="toastMessage" class="text-sm font-medium text-gray-900"></p>
      </div>
    </div>
  </div>
</div>

<script>
let allAnnouncements = [];
let filteredAnnouncements = [];
let autoRefreshInterval = null;
let deleteAnnouncementId = null;

// Load announcements on page load
document.addEventListener('DOMContentLoaded', function() {
  loadAnnouncements();
  loadLabs(); // Load labs for filter
  
  // Add event listeners for filters
  document.getElementById('searchInput').addEventListener('input', filterAnnouncements);
  document.getElementById('labFilter').addEventListener('change', filterAnnouncements);
  document.getElementById('sortFilter').addEventListener('change', filterAnnouncements);
  document.getElementById('autoRefresh').addEventListener('change', setupAutoRefresh);
  
  // Modal event listeners
  document.getElementById('confirmDelete').addEventListener('click', confirmDeleteAnnouncement);
  document.getElementById('cancelDelete').addEventListener('click', closeDeleteModal);
  
  // Close modal when clicking outside
  document.getElementById('deleteModal').addEventListener('click', function(e) {
    if (e.target === this) {
      closeDeleteModal();
    }
  });
});

async function loadAnnouncements() {
  try {
    showLoading(true);
    
    const response = await fetch('/api/pengumuman');
    const data = await response.json();
    
    if (data.success) {
      allAnnouncements = data.announcements;
      filteredAnnouncements = [...allAnnouncements];
      renderAnnouncements();
      updateStats();
      showToast('Pengumuman berhasil dimuat!', 'success');
    } else {
      throw new Error(data.message || 'Gagal memuat pengumuman');
    }
  } catch (error) {
    console.error('Error loading announcements:', error);
    showToast('Gagal memuat pengumuman: ' + error.message, 'error');
    showEmptyState();
  } finally {
    showLoading(false);
  }
}

async function loadLabs() {
  try {
    const response = await fetch('/api/lab');
    const data = await response.json();
    
    if (data.success) {
      const labFilter = document.getElementById('labFilter');
      // Keep the "Semua Lab" option
      labFilter.innerHTML = '<option value="">Semua Lab</option>';
      
      // Add lab options from database
      data.labs.forEach(lab => {
        const option = document.createElement('option');
        option.value = lab.nama.toLowerCase();
        option.textContent = lab.nama;
        labFilter.appendChild(option);
      });
    }
  } catch (error) {
    console.error('Error loading labs:', error);
  }
}

function filterAnnouncements() {
  const searchTerm = document.getElementById('searchInput').value.toLowerCase();
  const labFilter = document.getElementById('labFilter').value;
  const sortFilter = document.getElementById('sortFilter').value;
  
  filteredAnnouncements = allAnnouncements.filter(announcement => {
    const matchesSearch = announcement.isi.toLowerCase().includes(searchTerm);
    const matchesLab = !labFilter || announcement.isi.toLowerCase().includes(labFilter.toLowerCase());
    return matchesSearch && matchesLab;
  });
  
  // Sort announcements
  if (sortFilter === 'newest') {
    filteredAnnouncements.sort((a, b) => new Date(b.dibuat_pada) - new Date(a.dibuat_pada));
  } else if (sortFilter === 'oldest') {
    filteredAnnouncements.sort((a, b) => new Date(a.dibuat_pada) - new Date(b.dibuat_pada));
  }
  
  renderAnnouncements();
}

function renderAnnouncements() {
  const grid = document.getElementById('announcementsGrid');
  const emptyState = document.getElementById('emptyState');
  
  if (filteredAnnouncements.length === 0) {
    grid.innerHTML = '';
    emptyState.classList.remove('hidden');
    return;
  }
  
  emptyState.classList.add('hidden');
  
  grid.innerHTML = filteredAnnouncements.map(announcement => `
    <div class="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-300 transform hover:scale-105 border border-gray-100">
      <div class="p-6">
        <div class="flex items-start justify-between mb-4">
          <div class="flex-1">
            <h3 class="text-lg font-semibold text-gray-900 mb-2 line-clamp-2">
              ${announcement.isi.split(':')[0] || 'Pengumuman'}
            </h3>
            <p class="text-gray-600 text-sm line-clamp-3">
              ${announcement.isi.split(':').slice(1).join(':') || announcement.isi}
            </p>
          </div>
        </div>
        
        <div class="flex items-center justify-between text-sm text-gray-500 mb-4">
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
            </svg>
            <span>${announcement.dibuat_oleh}</span>
          </div>
          <div class="flex items-center gap-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <span>${formatDate(announcement.dibuat_pada)}</span>
          </div>
        </div>
        
        <div class="flex justify-end">
          <button onclick="deleteAnnouncement(${announcement.id})" class="text-red-600 hover:text-red-800 transition-colors p-2 rounded-lg hover:bg-red-50">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>
  `).join('');
}

function updateStats() {
  document.getElementById('totalCount').textContent = allAnnouncements.length;
  
  const today = new Date().toDateString();
  const todayCount = allAnnouncements.filter(ann => {
    if (!ann.dibuat_pada) return false;
    return new Date(ann.dibuat_pada).toDateString() === today;
  }).length;
  document.getElementById('todayCount').textContent = todayCount;
  
  document.getElementById('lastUpdate').textContent = 'Baru saja';
}

function deleteAnnouncement(id) {
  deleteAnnouncementId = id;
  document.getElementById('deleteModal').classList.remove('hidden');
}

async function confirmDeleteAnnouncement() {
  if (!deleteAnnouncementId) return;
  
  try {
    const response = await fetch(`/api/pengumuman/${deleteAnnouncementId}`, {
      method: 'DELETE'
    });
    const data = await response.json();
    
    if (data.success) {
      showToast('Pengumuman berhasil dihapus!', 'success');
      loadAnnouncements(); // Reload the list
    } else {
      throw new Error(data.message);
    }
  } catch (error) {
    console.error('Error deleting announcement:', error);
    showToast('Gagal menghapus pengumuman: ' + error.message, 'error');
  } finally {
    closeDeleteModal();
  }
}

function closeDeleteModal() {
  document.getElementById('deleteModal').classList.add('hidden');
  deleteAnnouncementId = null;
}

function setupAutoRefresh() {
  const interval = parseInt(document.getElementById('autoRefresh').value);
  
  if (autoRefreshInterval) {
    clearInterval(autoRefreshInterval);
    autoRefreshInterval = null;
  }
  
  if (interval > 0) {
    autoRefreshInterval = setInterval(() => {
      loadAnnouncements();
    }, interval * 1000);
  }
}

function formatDate(dateString) {
  if (!dateString) return 'Baru saja';
  
  const date = new Date(dateString);
  const now = new Date();
  const diffInMinutes = Math.floor((now - date) / (1000 * 60));
  
  if (diffInMinutes < 1) return 'Baru saja';
  if (diffInMinutes < 60) return `${diffInMinutes} menit yang lalu`;
  if (diffInMinutes < 1440) return `${Math.floor(diffInMinutes / 60)} jam yang lalu`;
  
  return date.toLocaleDateString('id-ID', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
}

function showLoading(show) {
  const loadingState = document.getElementById('loadingState');
  const announcementsGrid = document.getElementById('announcementsGrid');
  const emptyState = document.getElementById('emptyState');
  
  if (show) {
    loadingState.classList.remove('hidden');
    announcementsGrid.classList.add('hidden');
    emptyState.classList.add('hidden');
  } else {
    loadingState.classList.add('hidden');
    announcementsGrid.classList.remove('hidden');
  }
}

function showEmptyState() {
  const emptyState = document.getElementById('emptyState');
  const announcementsGrid = document.getElementById('announcementsGrid');
  emptyState.classList.remove('hidden');
  announcementsGrid.classList.add('hidden');
}

function showToast(message, type = 'success') {
  const toast = document.getElementById('toast');
  const toastMessage = document.getElementById('toastMessage');
  
  toastMessage.textContent = message;
  
  // Update toast styling based on type
  const toastContent = toast.querySelector('div');
  if (type === 'error') {
    toastContent.className = 'bg-white border-l-4 border-red-500 shadow-lg rounded-lg p-4 max-w-sm';
    toast.querySelector('svg').className = 'h-5 w-5 text-red-500';
  } else {
    toastContent.className = 'bg-white border-l-4 border-green-500 shadow-lg rounded-lg p-4 max-w-sm';
    toast.querySelector('svg').className = 'h-5 w-5 text-green-500';
  }
  
  toast.classList.remove('hidden');
  
  // Hide toast after 3 seconds
  setTimeout(() => {
    toast.classList.add('hidden');
  }, 3000);
}
</script>

<style>
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.line-clamp-3 {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
</style> 